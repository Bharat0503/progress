{"version":3,"file":"static/js/main.3ed9f431.js","mappings":"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","sources":["src/navigation/navigationService.ts","src/navigation/routes/index.ts","src/utils/config.ts","src/utils/colors.ts","src/components/logoText.tsx","src/components/emailMobileInput.tsx","src/screens/web/splash/splash.web.tsx","src/components/otpInput.tsx","src/screens/web/otp/otp.web.tsx","src/screens/web/signUp/signUp.web.tsx","src/components/signupForm.tsx","src/screens/web/signUpForm/signUpForm.web.tsx","src/navigation/navigationWeb.tsx","src/redux/types.ts","src/redux/reducer.ts","src/redux/store.ts","App.web.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createNavigationContainerRef } from '@react-navigation/native';\n\nexport const navigationRef = createNavigationContainerRef();\n\nclass NavigationService {\n  navigate(name: string, params?: object|undefined) {\n    if (navigationRef.isReady()) {\n      navigationRef.navigate(name, params);\n    }\n  }\n\n  goBack() {\n    if (navigationRef.isReady() && navigationRef.canGoBack()) {\n      navigationRef.goBack();\n    }\n  }\n\n  // Add other navigation methods as needed, like `push`, `replace`, etc.\n}\n\nexport default new NavigationService();","\n\nenum RouteNames {\n    Splash = \"Splash\",\n    Otp = \"Otp\",\n    SignUp = \"SignUp\",\n    SignUpForm = \"SignUpForm\",\n\n}\n\n export default RouteNames;","\nimport {\n    Platform,\n    Dimensions,\n    PixelRatio\n} from 'react-native'\n\nconst deviceHeight = Dimensions.get('window').height\nconst deviceWidth = Dimensions.get('window').width\nconst platform = Platform.OS\nconst isIOS = Platform.OS === 'ios'\nconst isAndroid = Platform.OS === 'android'\nconst isWeb = Platform.OS === 'web'\nconst isIphoneX =\n    platform === 'ios' && deviceHeight === 812 && deviceWidth === 375\n\nconst isIphoneXR =\n    platform === 'ios' && deviceHeight === 896 && deviceWidth === 414\n\nconst isIphone12 =\n    platform === 'ios' && deviceHeight === 844 && deviceWidth === 390\n\nconst isIphone12ProMax =\n    platform === 'ios' && deviceHeight === 926 && deviceWidth === 428\n\nconst isXSeries = () => {\n    if (isIphoneX || isIphoneXR || isIphone12 || isIphone12ProMax) {\n        return true\n    }\n    return false\n}\n\nconst scale = deviceWidth / 320;\n\n\n\nconst getWidth = (width:number) => {\n    return deviceWidth * (width / 100)\n}\n\nconst getHeight = (height:number) => {\n    return deviceHeight * (height / 100)\n}\n\nconst generateFontSize = (size: number) => {\n    return Math.round(size * ((deviceWidth - 25) / 400))\n}\n\nconst generateFontSizeNew = (size:number) => {\n    const newSize = size * scale\n    if (Platform.OS === 'ios') {\n        return Math.round(PixelRatio.roundToNearestPixel(newSize))\n    } else {\n        return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\n    }\n}\n\nexport default {\n\n    platform,\n    isIOS,\n    isAndroid,\n    isWeb,\n    isIphoneX,\n    deviceHeight,\n    deviceWidth,\n    getWidth,\n    getHeight,\n    generateFontSize,\n    generateFontSizeNew,\n    isXSeries,\n}\n","export const commonColors = {\n     black: '#000000',\n    white: '#FFFFFF',\n    red:'#EE6161'\n}\nexport const textColors = {\n    stayCurrentMD: '#231F20',\n    signUp: '#0089FF',\n}\nexport const borderColors = {\n    textInputBorder: 'rgba(226, 230, 235, 1)',\n       signInBorder: '#E2E6EB',\n\n}\nexport const backgroundColors = {\n    offWhite: '#F8F8F8',\n        signInButton: '#231F20',\n}\n","import React, { } from 'react'\nimport { View, Text, Image, StyleSheet } from 'react-native'\nimport config from '../utils/config'\n\n\nimport { textColors } from '../utils/colors'\n\n\n\nconst LogoText: React.FC = () => {\n    return (\n        <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n            <Image\n                style={styles.logoImage}\n                source={require('../assets/icons/logo2.png')}\n                resizeMode='contain'\n\n            />\n            <Text style={[styles.logoText, {\n                fontFamily: 'regular',\n            }]}>StayCurrent<Text style={[styles.logoText, {\n                fontFamily: 'bold'\n            }]}>MD</Text></Text>\n        </View>\n\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    logoImage: {\n        height: config.isWeb ? config.getHeight(11) : config.getHeight(13),\n        width: config.isWeb ? config.getWidth(7) : config.getWidth(24),\n\n\n    },\n    logoText: {\n        fontSize: config.isWeb ? config.generateFontSizeNew(5) : config.generateFontSizeNew(18),\n        color: textColors.stayCurrentMD,\n        letterSpacing: config.isWeb ? config.getWidth(0.2) : config.getWidth(0.4)\n\n\n    }\n\n})\n\nexport default LogoText","import React, { useState, useEffect } from 'react'\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native'\nimport config from '../utils/config'\nimport { textColors, borderColors, commonColors, backgroundColors } from '../utils/colors'\nimport navigationService from '../navigation/navigationService'\nimport RouteNames from '../navigation/routes'\n// import BaseText from './atoms/BaseText/BaseText'\n// import styled from 'styled-components/native'\n// import BaseInput from './atoms/BaseInput/BaseInput'\n\ninterface EmailMobileInputProps {\n    login?: boolean;\n    signUp?: boolean\n}\n\nconst EmailMobileInput: React.FC<EmailMobileInputProps> = ({ login, signUp }) => {\n    const [email, setEmail] = useState('');\n    useEffect(() => {\n        // Trigger the slide animation based on `isVisible`\n\n        return (() => {\n\n        })\n\n    }, []);\n    return (\n        // <Container>\n        <View style={styles.container}>\n\n\n            {/* <HeaderText>Sign in with your phone number or your email</HeaderText> */}\n            {\n                login &&\n\n                <Text style={styles.HeaderText}>\n                    Sign in with your phone number or your email\n\n                </Text>\n            }\n\n            {signUp &&\n\n                <Text style={styles.HeaderText}>\n                    Enter your phone number or your email\n\n                </Text>\n\n            }\n            {/* <EmailPhoneInput\n                value={email}\n                onChangeText={(value) => {\n                    setEmail(value)\n                }}\n            /> */}\n\n\n\n            <TextInput\n                style={styles.EmailPhoneInput}\n                maxLength={100}\n                value={email}\n                onChangeText={setEmail}\n                keyboardType=\"email-address\"\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n            />\n            <TouchableOpacity onPress={() => {\n                signUp ?\n                    navigationService.navigate(RouteNames.Otp, { signUp: { signUp } })\n                    :\n                    navigationService.navigate(RouteNames.Otp, { login: { login } })\n            }} style={styles.SignInSignUpButton}>\n                {\n                    login &&\n                    <Text style={styles.SignInSignUpText}>\n                        Sign in\n                    </Text>\n                    // <SignInSignUpButton>\n                    //     Sign in\n                    // </SignInSignUpButton>\n\n                }\n                {signUp &&\n                    <Text style={styles.SignInSignUpText}>\n                        Sign Up\n                    </Text>\n                    // <SignInSignUpButton>\n                    //     Sign Up\n                    // </SignInSignUpButton>\n\n                }\n\n            </TouchableOpacity>\n            {\n                login &&\n                <Text style={[styles.bottomText, { color: commonColors.black }]}>\n                    Don't have an account? <Text onPress={() => { navigationService.navigate(RouteNames.SignUp) }} style={[styles.bottomText, { color: textColors.signUp }]}>\n                        Sign Up\n                    </Text>\n                </Text>\n            }\n\n            {\n                signUp &&\n                <Text style={[styles.bottomText, { color: commonColors.black, }]}>\n                    Already have an account? <Text onPress={() => { navigationService.navigate(RouteNames.Splash, { animation: false }) }} style={[styles.bottomText, { color: textColors.signUp }]}>\n                        Sign In\n                    </Text>\n                </Text>\n            }\n\n\n\n        </View>\n\n        // </Container>\n\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    },\n    HeaderText: {\n        color: commonColors.black,\n        fontFamily: 'regular',\n        fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n    },\n    EmailPhoneInput: {\n        height: config.isWeb ? config.getHeight(5) : config.getHeight(7),\n        width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n        borderColor: borderColors.textInputBorder,\n        borderWidth: config.isWeb ? 0.1 : 1,\n        borderRadius: config.isWeb ? config.getWidth(0.7) : config.getWidth(4),\n        paddingHorizontal: 10,\n        backgroundColor: '#fff',\n        marginVertical: config.getHeight(2)\n    },\n    SignInSignUpButton: {\n        borderRadius: config.isWeb ? config.getWidth(0.7) : config.getWidth(4),\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: config.isWeb ? config.getWidth(8) : config.getWidth(40),\n        height: config.isWeb ? config.getHeight(5) : config.getHeight(7),\n        backgroundColor: backgroundColors.signInButton\n    },\n    SignInSignUpText: {\n        color: commonColors.white,\n        fontSize: config.isWeb ? config.generateFontSizeNew(3.5) : config.generateFontSizeNew(18),\n        fontFamily: 'regular'\n    },\n    bottomText: {\n        fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n        fontFamily: 'regular',\n        marginTop: config.getHeight(2.5)\n    }\n})\n// const Container = styled(View)({\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     flex: 1\n// })\n\n// const HeaderText = styled(BaseText)({\n//     color: commonColors.black,\n//     fontFamily: 'regular',\n//     fontSize: config.generateFontSizeNew(3.2),\n// })\n\n// const EmailPhoneInput = styled(BaseInput)({\n//     height: config.getHeight(5),\n//     width: config.getWidth(20),\n//     borderColor: borderColors.textInputBorder,\n//     borderWidth: 0.1,\n//     borderRadius: config.getWidth(0.7),\n//     paddingHorizontal: 10,\n//     backgroundColor: '#fff',\n//     marginVertical: config.getHeight(2)\n// })\n\n// const SignInSignUpButton = styled(BaseText)({\n//     color: commonColors.white,\n//     fontSize: config.generateFontSizeNew(3.5),\n//     fontFamily: 'regular'\n// })\nexport default EmailMobileInput","import React, { useEffect } from 'react'\nimport { View } from 'react-native'\nimport config from '../../../utils/config'\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming } from 'react-native-reanimated';\n\n\nimport LogoText from '../../../components/logoText';\nimport EmailMobileInput from '../../../components/emailMobileInput';\n\nconst Splash: React.FC = (props) => {\n\n    const translateY = useSharedValue(0); // start off-screen\n    const loginOpacity = useSharedValue(0);\n    const animation = props?.route?.params?.animation\n\n    useEffect(() => {\n\n        if (animation) {\n            setTimeout(() => {\n                translateY.value = -config.getHeight(20);\n            }, 2000)\n        }\n        setTimeout(() => {\n            loginOpacity.value = 1;\n        }, animation ? 2500 : 500)\n\n\n        return () => {\n        }\n\n    }, []);\n\n\n\n    const animatedStyle = useAnimatedStyle(() => ({\n        transform: [{ translateY: withTiming(translateY.value, { duration: 500 }) }],\n    }));\n\n    const animatedLoginStyle = useAnimatedStyle(() => ({\n        opacity: withTiming(loginOpacity.value, { duration: 500 }),\n    }));\n    return (\n\n        <View style={{ alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n            {\n                animation ?\n                    <Animated.View style={[{ alignItems: 'center', justifyContent: 'center', position: 'absolute', top: config.getHeight(40) }, animatedStyle]}>\n                        <LogoText />\n                    </Animated.View>\n                    :\n                    <View style={{ alignItems: 'center', justifyContent: 'center', position: 'absolute', top: config.getHeight(40), transform: [{ translateY: -config.getHeight(20) }] }}>\n                        <LogoText />\n                    </View>\n            }\n            <Animated.View style={[{ justifyContent: 'center', alignItems: 'center', position: 'absolute', top: config.getHeight(40) }, animatedLoginStyle]}>\n                <EmailMobileInput login={true} />\n            </Animated.View>\n        </View>\n    )\n\n}\n\nexport default Splash","import React, { useState, useEffect, useRef } from 'react'\nimport { Platform, View, Text, TextInput, StyleSheet } from 'react-native'\nimport config from '../utils/config'\nimport { borderColors, commonColors } from '../utils/colors'\n\n\n\nconst OtpInput: React.FC = () => {\n    const pin1Ref = useRef(null)\n    const pin2Ref = useRef(null)\n    const pin3Ref = useRef(null)\n    const pin4Ref = useRef(null)\n    const pin5Ref = useRef(null)\n\n    const [otp1, setOtp1] = useState('')\n    const [otp2, setOtp2] = useState('')\n    const [otp3, setOtp3] = useState('')\n    const [otp4, setOtp4] = useState('')\n    const [otp5, setOtp5] = useState('')\n    const [submit, setSubmit] = useState(false)\n\n\n\n\n    useEffect(() => {\n        // Trigger the slide animation based on `isVisible`\n\n\n        return (() => {\n\n        })\n\n    }, []);\n\n\n    return (\n        <View style={styles.btn1View}>\n\n            <Text style={styles.HeaderText}>\n                Enter the code you got via email/phone\n\n            </Text>\n\n            <View style={styles.otpContainer}>\n\n\n\n\n                <View style={styles.otpInputStyle}>\n                    <TextInput allowFontScaling={false}\n                        ref={pin1Ref}\n                        value={otp1}\n                        onKeyPress={({ nativeEvent }) => {\n                            if (nativeEvent.key === 'Backspace' && otp1 == \"\") {\n                                pin1Ref.current.focus();\n                            } //do action : //other action\n                        }}\n                        onChangeText={async (value) => {\n\n\n                            setOtp1(value)\n                            if (value.length == 0) {\n\n                                // pin1Ref.current.focus();\n                            } else {\n\n                                pin2Ref.current.focus();\n                            }\n                        }}\n                        style={styles.otpInput}\n                        // autoFocus={true}\n                        // autoCorrect={false}\n                        maxLength={1}\n                        keyboardType='number-pad'\n                    // onBlur={() => handleIsFocused(false)}\n                    // onFocus={() => {\n\n                    //     handleIsFocused(true);\n                    // }}\n\n                    />\n\n\n                </View>\n                <View style={styles.otpInputStyle}>\n                    <TextInput allowFontScaling={false}\n                        ref={pin2Ref}\n                        onKeyPress={({ nativeEvent }) => {\n                            if (nativeEvent.key === 'Backspace' && otp2 == \"\") {\n                                pin1Ref.current.focus();\n                            } //do action : //other action\n                        }}\n                        value={otp2}\n                        onChangeText={(value) => {\n\n                            setOtp2(value)\n                            if (value.length == 0) {\n\n                                // pin1Ref.current.focus();\n                            } else {\n\n                                pin3Ref.current.focus();\n                            }\n                        }}\n                        style={styles.otpInput}\n                        // autoFocus={true}\n                        // autoCorrect={false}\n                        maxLength={1}\n                        keyboardType='number-pad'\n                    // onBlur={() => handleIsFocused(false)}\n                    // onFocus={() => {\n\n                    //     handleIsFocused(true);\n                    // }}\n\n                    />\n\n\n                </View>\n                <View style={styles.otpInputStyle}>\n                    <TextInput allowFontScaling={false}\n                        ref={pin3Ref}\n                        value={otp3}\n                        onKeyPress={({ nativeEvent }) => {\n                            if (nativeEvent.key === 'Backspace' && otp3 == \"\") {\n                                pin2Ref.current.focus();\n                            } //do action : //other action\n                        }}\n\n                        onChangeText={(value) => {\n                            setOtp3(value)\n                            if (value.length == 0) {\n                                // pin2Ref.current.focus();\n                            } else {\n                                pin4Ref.current.focus();\n                            }\n                        }}\n                        style={styles.otpInput}\n                        // autoFocus={otp3 ? false : true}\n                        // autoCorrect={false}\n                        maxLength={1}\n                        keyboardType='number-pad'\n                    // onBlur={() => handleIsFocused(false)}\n                    // onFocus={() => {\n\n                    //     handleIsFocused(true);\n                    // }}\n\n                    />\n\n\n                </View>\n                <View style={styles.otpInputStyle}>\n                    <TextInput allowFontScaling={false}\n                        ref={pin4Ref}\n                        value={otp4}\n                        onKeyPress={({ nativeEvent }) => {\n                            if (nativeEvent.key === 'Backspace' && otp4 == \"\") {\n                                pin3Ref.current.focus();\n                            } //do action : //other action\n                        }}\n                        onChangeText={(value) => {\n                            setOtp4(value)\n                            if (value.length == 0) {\n                                // pin3Ref.current.focus();\n                            } else {\n                                pin5Ref.current.focus();\n                            }\n                        }}\n                        style={styles.otpInput}\n                        // autoFocus={otp4 ? false : true}\n                        autoCorrect={false}\n                        maxLength={1}\n                        keyboardType='number-pad'\n                    // onBlur={() => handleIsFocused(false)}\n                    // onFocus={() => {\n\n                    //     handleIsFocused(true);\n                    // }}\n\n                    />\n\n\n                </View>\n                <View style={styles.otpInputStyle}>\n                    <TextInput allowFontScaling={false}\n                        ref={pin5Ref}\n                        value={otp5}\n                        onKeyPress={({ nativeEvent }) => {\n                            if (nativeEvent.key === 'Backspace' && otp5 == \"\") {\n                                pin4Ref.current.focus();\n                            } //do action : //other action\n                        }}\n                        onChangeText={(value) => {\n                            setOtp5(value)\n                            if (value.length == 0) {\n                                setSubmit(false)\n                                // pin4Ref.current.focus();\n                            } else {\n                                setSubmit(true)\n\n                                pin5Ref.current.focus();\n                            }\n                        }}\n                        style={styles.otpInput}\n                        // autoFocus={otp4 ? false : true}\n                        autoCorrect={false}\n                        maxLength={1}\n                        keyboardType='number-pad'\n                    // onBlur={() => handleIsFocused(false)}\n                    // onFocus={() => {\n\n                    //     handleIsFocused(true);\n                    // }}\n\n                    />\n\n\n                </View>\n\n            </View>\n\n\n\n\n        </View>\n\n    )\n\n}\n\n\nconst styles = StyleSheet.create({\n    HeaderText: {\n        color: commonColors.black,\n        fontFamily: 'regular',\n        fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n    },\n    otpContainer: {\n        alignSelf: 'center',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    btn1View: {\n        alignSelf: 'center',\n        alignItems: 'center',\n\n\n    },\n    otpInputStyle: {\n\n\n\n        width: Platform.OS == 'web' ? config.getWidth(3) : config.getWidth(13),\n        height: Platform.OS == 'web' ? config.getHeight(6.5) : config.getHeight(7.5),\n        borderColor: borderColors.textInputBorder,\n        borderWidth: Platform.OS == 'web' ? 0.1 : 1,\n        borderRadius: Platform.OS == 'web' ? config.getWidth(1) : config.getWidth(4),\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginVertical: config.getHeight(2),\n        marginHorizontal: Platform.OS == 'web' ? config.getWidth(0.5) : config.getWidth(1.5),\n\n    },\n    otpInput: {\n        width: Platform.OS == 'web' ? config.getWidth(3) : config.getWidth(13),\n        height: Platform.OS == 'web' ? config.getHeight(6.5) : config.getHeight(7.5),\n        alignSelf: 'center',\n        borderColor: borderColors.textInputBorder,\n        borderWidth: Platform.OS == 'web' ? 0.1 : 1,\n        borderRadius: Platform.OS == 'web' ? config.getWidth(1) : config.getWidth(4),\n        textAlign: 'center',\n        backgroundColor: '#fff',\n        color: '#000'\n    },\n})\n\n\n\nexport default OtpInput","/* eslint-disable no-unused-expressions */\nimport React, { useEffect } from 'react'\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native'\nimport config from '../../../utils/config'\n\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming } from 'react-native-reanimated';\nimport { borderColors, commonColors } from '../../../utils/colors'\nimport navigationService from '../../../navigation/navigationService';\nimport RouteNames from '../../../navigation/routes/index';\n\nimport LogoText from '../../../components/logoText';\nimport OtpInput from '../../../components/otpInput';\n\nconst Otp: React.FC = (props) => {\n\n    // const translateY = useSharedValue(0); // start off-screen\n    const otpOpacity = useSharedValue(0);\n    const signUp = props?.route?.params?.signUp\n    const login = props?.route?.params?.login\n\n    useEffect(() => {\n        setTimeout(() => {\n            otpOpacity.value = 1;\n        }, 500)\n    }, []);\n\n    const animatedOtpStyle = useAnimatedStyle(() => ({\n        opacity: withTiming(otpOpacity.value, { duration: 500 }),\n    }));\n\n\n    return (\n        <View style={{ alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n            <View style={{ alignItems: 'center', justifyContent: 'center', position: 'absolute', top: config.getHeight(40), transform: [{ translateY: -config.getHeight(20) }] }}>\n                <LogoText />\n            </View>\n            <Animated.View style={[{ justifyContent: 'center', alignItems: 'center', position: 'absolute', top: config.getHeight(40) }, animatedOtpStyle]}>\n                <OtpInput />\n                <TouchableOpacity onPress={() => {\n                    signUp ?\n                        navigationService.navigate(RouteNames.SignUpForm)\n                        : null\n                }} style={{ borderRadius: config.getWidth(0.7), justifyContent: 'center', alignItems: 'center', width: config.getWidth(8), height: config.getHeight(5), backgroundColor: '#231F20' }}>\n                    {signUp\n                        ?\n                        <Text style={{ color: commonColors.white, fontSize: config.generateFontSizeNew(3.5), fontFamily: 'regular' }}>\n                            Sign Up\n                        </Text>\n                        : <Text style={{ color: commonColors.white, fontSize: config.generateFontSizeNew(3.5), fontFamily: 'regular' }}>\n                            Sign in\n                        </Text>\n                    }\n\n\n                </TouchableOpacity>\n            </Animated.View>\n        </View>\n\n\n\n\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    btn1View: {\n        alignSelf: 'center',\n        flexDirection: 'row',\n        alignItems: 'center',\n\n    },\n    otpInputStyle: {\n        width: config.getWidth(3.5),\n        height: config.getWidth(4),\n        borderColor: borderColors.textInputBorder,\n        borderWidth: 1,\n        borderRadius: config.getWidth(1),\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginHorizontal: config.getWidth(1)\n    },\n    otpInput: {\n        width: config.getWidth(3.5),\n        height: config.getWidth(4),\n        alignSelf: 'center',\n        borderColor: borderColors.textInputBorder,\n        borderWidth: 1,\n        borderRadius: config.getWidth(1),\n        textAlign: 'center',\n        backgroundColor: '#fff',\n        color: '#000'\n    },\n})\n\nexport default Otp","import React, { useState, useEffect } from 'react'\nimport { View } from 'react-native'\nimport config from '../../../utils/config'\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming } from 'react-native-reanimated';\nimport LogoText from '../../../components/logoText';\nimport EmailMobileInput from '../../../components/emailMobileInput';\n\n\n\nconst SignUp: React.FC = () => {\n    const signUpOpacity = useSharedValue(0);\n    useEffect(() => {\n        setTimeout(() => {\n            signUpOpacity.value = 1;\n        }, 500)\n    }, []);\n    const animatedSignUpStyle = useAnimatedStyle(() => ({\n        opacity: withTiming(signUpOpacity.value, { duration: 500 }),\n    }));\n\n    return (\n        <View style={{ alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n            <View style={{ alignItems: 'center', justifyContent: 'center', position: 'absolute', top: config.getHeight(40), transform: [{ translateY: -config.getHeight(20) }] }}>\n                <LogoText />\n            </View>\n            <Animated.View style={[{ justifyContent: 'center', alignItems: 'center', position: 'absolute', top: config.getHeight(40) }, animatedSignUpStyle]}>\n                <EmailMobileInput signUp={true} />\n            </Animated.View>\n        </View>\n    )\n}\n\nexport default SignUp","import React, { useState, useEffect } from 'react'\nimport { Platform, View, Text, Image, KeyboardAvoidingView, TextInput, TouchableOpacity, FlatList, ScrollView } from 'react-native'\nimport config from '../utils/config'\nimport { borderColors, commonColors, backgroundColors } from '../utils/colors'\n\n\n\nconst SignupForm: React.FC = ({ }) => {\n\n    const [email, setEmail] = useState('');\n    const [speciality, setSpeciality] = useState(\"\")\n    const [specialityVisible, setSpecialityVisible] = useState(false)\n    const [title, setTitle] = useState(\"\")\n    const [titleVisible, setTitleVisible] = useState(false)\n    const [affiliation, setAffiliation] = useState(\"\")\n    const [affiliationVisible, setAffiliationVisible] = useState(false)\n    const SpecialityData = [\n        { id: \"1\", name: \"Cardiology\" },\n        { id: \"2\", name: \"Neurology\" },\n        { id: \"3\", name: \"Oncology\" },\n        { id: \"4\", name: \"Pediatrics\" },\n        { id: \"5\", name: \"Orthopedics\" }\n    ];\n    const TitlesData = [\n        { id: \"1\", name: \"Dr.\" },\n        { id: \"2\", name: \"Prof.\" },\n        { id: \"3\", name: \"Mr.\" },\n        { id: \"4\", name: \"Ms.\" },\n        { id: \"5\", name: \"Mrs.\" }\n    ]\n    const AffiliationsData = [\n        { id: \"1\", name: \"Johns Hopkins Hospital\" },\n        { id: \"2\", name: \"Mayo Clinic\" },\n        { id: \"3\", name: \"Cleveland Clinic\" },\n        { id: \"4\", name: \"Massachusetts General Hospital\" },\n        { id: \"5\", name: \"UCLA Medical Center\" }\n    ]\n    type ItemProps = { title: string, type: string };\n\n\n    useEffect(() => {\n        // Trigger the slide animation based on `isVisible`\n\n        return (() => {\n\n        })\n\n    }, []);\n\n    const Item = ({ title, type }: ItemProps) => (\n\n        <TouchableOpacity onPress={() => {\n            if (type === 'Speciality') {\n                setSpeciality(title)\n                setSpecialityVisible(false)\n            }\n            else if (type === 'Title') {\n                setTitle(title)\n                setTitleVisible(false)\n            }\n            else {\n                setAffiliation(title)\n                setAffiliationVisible(false)\n            }\n        }} style={{ backgroundColor: commonColors.white, marginHorizontal: config.getWidth(0.1) }}>\n            <Text style={{\n                color: commonColors.black,\n                fontFamily: 'regular',\n                fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n                marginHorizontal: config.isWeb ? config.getWidth(0.3) : config.getWidth(1.5)\n            }}>{title}</Text>\n        </TouchableOpacity>\n\n    );\n\n\n\n    return (\n\n        <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1 }}>\n\n\n\n            <Text style={{\n                color: commonColors.black,\n                fontFamily: 'regular',\n                fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n                marginTop: config.isWeb ? config.getHeight(2) : 0,\n                marginBottom: config.getHeight(3.5)\n            }}>\n                To help us customize your app experience, please complete the following profile information\n            </Text>\n\n\n\n            <View style={{\n                width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n\n            }}>\n                <Text style={{\n                    color: commonColors.black,\n                    fontFamily: 'regular',\n                    fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n                    alignSelf: 'flex-start',\n                    marginBottom: config.getHeight(1)\n                }}>\n                    Name <Text style={{\n                        color: commonColors.red,\n                        fontFamily: 'regular',\n                        fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n                        marginBottom: config.getHeight(1)\n                    }}>*</Text>\n                </Text>\n\n                <TextInput\n                    style={{\n                        height: config.isWeb ? config.getHeight(5) : config.getHeight(7),\n                        width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n                        borderColor: borderColors.textInputBorder,\n                        borderWidth: config.isWeb ? 0.1 : 1,\n                        borderRadius: config.isWeb ? config.getWidth(0.7) : config.getWidth(4),\n                        paddingHorizontal: 10,\n                        backgroundColor: '#fff',\n                    }}\n                    maxLength={100}\n                    value={email}\n                    onChangeText={setEmail}\n                    keyboardType=\"email-address\"\n                    autoCapitalize=\"none\"\n                    autoCorrect={false}\n                />\n            </View>\n\n            <View style={{\n                width: config.isWeb ? config.getWidth(20) : config.getWidth(90), marginTop: config.getHeight(2)\n            }}>\n                <Text style={{\n                    color: commonColors.black,\n                    fontFamily: 'regular',\n                    fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n                    alignSelf: 'flex-start',\n                    marginBottom: config.getHeight(1)\n                }}>\n                    Speciality\n                </Text>\n                <TouchableOpacity onPress={() => setSpecialityVisible(!specialityVisible)} style={{\n                    height: config.isWeb ? config.getHeight(5) : config.getHeight(7),\n                    width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n                    borderColor: borderColors.textInputBorder,\n                    borderWidth: config.isWeb ? 0.1 : 1,\n                    borderRadius: config.isWeb ? config.getWidth(0.7) : config.getWidth(4),\n                    paddingHorizontal: 10,\n                    backgroundColor: '#fff',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between', alignItems: 'center'\n                }}>\n                    <Text style={{ color: commonColors.black }}>\n                        {speciality}\n                    </Text>\n                    <Image\n                        style={{\n                            height: config.isWeb ? config.getHeight(0.7) : config.getHeight(2),\n                            width: config.isWeb ? config.getWidth(0.5) : config.getWidth(3),\n                            marginRight: config.isWeb ? config.getWidth(0.6) : config.getWidth(1.2),\n                            marginTop: config.isWeb ? 1 : 3\n                        }}\n                        source={require('../assets/icons/DropDown.png')}\n                        resizeMode='contain'\n\n                    />\n\n                </TouchableOpacity>\n                {specialityVisible ?\n                    <View style={{\n                        marginTop: config.getHeight(1),\n                        width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n                    }}>\n                        <FlatList\n                            data={SpecialityData}\n                            renderItem={({ item }) => <Item title={item.name} type='Speciality' />}\n                            keyExtractor={item => item.id}\n                            scrollEnabled={false}\n                        />\n\n                    </View>\n                    : null}\n\n\n            </View>\n            <View style={{\n                marginTop: config.getHeight(2),\n                width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n\n            }}>\n                <Text style={{\n                    color: commonColors.black,\n                    fontFamily: 'regular',\n                    fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n                    alignSelf: 'flex-start',\n                    marginBottom: config.getHeight(1)\n                }}>\n                    Title\n                </Text>\n\n                <TouchableOpacity onPress={() => setTitleVisible(!titleVisible)} style={{\n                    height: config.isWeb ? config.getHeight(5) : config.getHeight(7),\n                    width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n                    borderColor: borderColors.textInputBorder,\n                    borderWidth: config.isWeb ? 0.1 : 1,\n                    borderRadius: config.isWeb ? config.getWidth(0.7) : config.getWidth(4),\n                    paddingHorizontal: 10,\n                    backgroundColor: '#fff',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between', alignItems: 'center'\n                }}>\n                    <Text style={{ color: commonColors.black }}>\n                        {title}\n                    </Text>\n                    <Image\n                        style={{\n                            height: config.isWeb ? config.getHeight(0.7) : config.getHeight(2),\n                            width: config.isWeb ? config.getWidth(0.5) : config.getWidth(3),\n                            marginRight: config.isWeb ? config.getWidth(0.6) : config.getWidth(1.2),\n                            marginTop: config.isWeb ? 1 : 3\n                        }}\n                        source={require('../assets/icons/DropDown.png')}\n                        resizeMode='contain'\n\n                    />\n\n                </TouchableOpacity>\n                {titleVisible ?\n                    <View style={{\n                        marginTop: config.getHeight(1),\n                        width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n                    }}>\n                        <FlatList\n                            data={TitlesData}\n                            renderItem={({ item }) => <Item title={item.name} type='Title' />}\n                            keyExtractor={item => item.id}\n                            scrollEnabled={false}\n                        />\n\n                    </View>\n                    : null}\n\n\n            </View>\n            <View style={{\n                marginTop: config.getHeight(2),\n                width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n            }}>\n                <Text style={{\n                    color: commonColors.black,\n                    fontFamily: 'regular',\n                    fontSize: config.isWeb ? config.generateFontSizeNew(3.2) : config.generateFontSizeNew(14),\n                    alignSelf: 'flex-start',\n                    marginBottom: config.getHeight(1)\n                }}>\n                    Affiliation(s)\n                </Text>\n\n                <TouchableOpacity onPress={() => setAffiliationVisible(!affiliationVisible)} style={{\n                    height: config.isWeb ? config.getHeight(5) : config.getHeight(7),\n                    width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n                    borderColor: borderColors.textInputBorder,\n                    borderWidth: config.isWeb ? 0.1 : 1,\n                    borderRadius: config.isWeb ? config.getWidth(0.7) : config.getWidth(4),\n                    paddingHorizontal: 10,\n                    backgroundColor: '#fff',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between', alignItems: 'center'\n                }}>\n                    <Text style={{ color: commonColors.black }}>\n                        {affiliation}\n                    </Text>\n                    <Image\n                        style={{\n                            height: config.isWeb ? config.getHeight(0.7) : config.getHeight(2),\n                            width: config.isWeb ? config.getWidth(0.5) : config.getWidth(3),\n                            marginRight: config.isWeb ? config.getWidth(0.6) : config.getWidth(1.2),\n                            marginTop: config.isWeb ? 1 : 3\n                        }}\n                        source={require('../assets/icons/DropDown.png')}\n                        resizeMode='contain'\n\n                    />\n\n                </TouchableOpacity>\n                {affiliationVisible ?\n                    <View style={{\n                        marginTop: config.getHeight(1),\n                        width: config.isWeb ? config.getWidth(20) : config.getWidth(90),\n                    }}>\n                        <FlatList\n                            data={AffiliationsData}\n                            renderItem={({ item }) => <Item title={item.name} type='Affiliation' />}\n                            keyExtractor={item => item.id}\n                            scrollEnabled={false}\n                        />\n\n                    </View>\n                    : null}\n            </View>\n\n\n\n\n\n            <TouchableOpacity onPress={() => {\n\n\n\n            }} style={{\n                borderRadius: config.isWeb ? config.getWidth(0.7) : config.getWidth(4),\n                justifyContent: 'center',\n                alignItems: 'center',\n\n                width: config.isWeb ? config.getWidth(8) : config.getWidth(40),\n                height: config.isWeb ? config.getHeight(5) : config.getHeight(7),\n                backgroundColor: backgroundColors.signInButton,\n                marginTop: config.getHeight(4),\n                marginBottom: config.getHeight(4)\n\n\n\n            }}>\n\n\n                <Text style={{\n                    color: commonColors.white,\n                    fontSize: config.isWeb ? config.generateFontSizeNew(3.5) : config.generateFontSizeNew(18),\n                    fontFamily: 'regular'\n                }}>\n                    Save\n                </Text>\n            </TouchableOpacity>\n        </View >\n\n    )\n\n}\n\nexport default SignupForm","import React, { useEffect } from 'react'\nimport { View, ScrollView } from 'react-native'\nimport config from '../../../utils/config'\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming } from 'react-native-reanimated';\nimport LogoText from '../../../components/logoText';\nimport SignupForm from '../../../components/signupForm';\n\n\n\nconst SignUpForm: React.FC = () => {\n    const signUpOpacity = useSharedValue(0);\n\n    useEffect(() => {\n        setTimeout(() => {\n            signUpOpacity.value = 1;\n        }, 500)\n    }, []);\n\n    const animatedSignUpStyle = useAnimatedStyle(() => ({\n        opacity: withTiming(signUpOpacity.value, { duration: 500 }),\n    }));\n\n\n\n\n\n    return (\n        <ScrollView contentContainerStyle={{ flexGrow: 1, justifyContent: 'center', alignItems: 'center' }} style={{ padding: 10, height: config.getHeight(100) }}>\n            <View style={{ alignItems: 'center', justifyContent: 'center', flex: 1, alignSelf: 'center' }}>\n                <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n                    <LogoText />\n                </View>\n\n                <Animated.View style={[{ justifyContent: 'center', alignItems: 'center' }, animatedSignUpStyle]}>\n                    <SignupForm />\n                </Animated.View>\n            </View>\n        </ScrollView>\n\n    )\n\n}\n\nexport default SignUpForm","import React from 'react'\nimport { Easing, Animated, BackHandler, ToastAndroid, StatusBar } from 'react-native'\nimport { NavigationContainer, useNavigation } from '@react-navigation/native'\n// import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { navigationRef } from './navigationService';\n\nimport RouteNames from './routes/index';\n\n//SCREENS\nimport Splash from '../screens/web/splash/splash.web'\nimport Otp from '../screens/web/otp/otp.web';\nimport SignUp from '../screens/web/signUp/signUp.web';\nimport SignUpForm from '../screens/web/signUpForm/signUpForm.web';\n\n\n//import Update from '../update/Update'\n\n// Components\n\n// import Header from '../components/header/Header'\n// import TabContent from './tabContent'\n\n// Redux Reducer\n\n\n\n\n\n\n\nconst Stack = createStackNavigator()\n\nconst linking = {\n  prefixes: ['http://localhost:8081'], // or your app's URL\n  config: {\n\n    screens: {\n      Splash: RouteNames.Splash,\n      Otp: RouteNames.Otp,\n      SignUp: RouteNames.SignUp,\n      SignUpForm:RouteNames.SignUpForm\n      // Add other screens here\n    },\n\n  },\n};\n\nconst NavigationWeb = () => {\n    return (\n      <NavigationContainer\n        linking={linking}\n        ref={navigationRef}\n\n      >\n        <Stack.Navigator\n          screenOptions={{\n            detachPreviousScreen:true\n          }}\n          initialRouteName={RouteNames.Splash}\n\n        >\n                <Stack.Screen\n                    name={RouteNames.Splash}\n                    component={Splash}\n            options={{\n              headerShown: false,\n\n            }}\n            initialParams={{animation:true}}\n                />\n                 <Stack.Screen\n                    name={RouteNames.Otp}\n                    component={Otp}\n            options={{\n                      detachPreviousScreen:true,\n                        headerShown: false,\n                    }}\n          />\n           <Stack.Screen\n                    name={RouteNames.SignUp}\n                    component={SignUp}\n            options={{\n                      detachPreviousScreen:true,\n                        headerShown: false,\n                    }}\n          />\n          <Stack.Screen\n                    name={RouteNames.SignUpForm}\n                    component={SignUpForm}\n            options={{\n                      detachPreviousScreen:true,\n                        headerShown: false,\n                    }}\n                />\n        </Stack.Navigator>\n\n        </NavigationContainer>\n    )\n\n}\n\nexport default NavigationWeb\n","\nexport const CommonActionTypes = {\n    CREATE_PROFILE: 'CREATE_PROFILE',\n}","import { CommonActionTypes } from \"./types\";\n\nconst CommonState = {\n    userData: {},\n\n}\n\nconst reducer = (state = { ...CommonState }, action:{type:string, payload:any}) => {\n    switch (action.type) {\n        case CommonActionTypes.CREATE_PROFILE: {\n            return {\n                ...state,\n                userData: action.payload\n            }\n        }\n        default:\n            return {\n                ...state\n            };\n    }\n }\n\n export default reducer","\nimport { thunk } from 'redux-thunk';\nimport { legacy_createStore as createStore, applyMiddleware, compose, combineReducers, AnyAction,Reducer } from 'redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport reducer from './reducer';\nimport { persistReducer, persistStore, PersistConfig } from 'redux-persist';\n\nconst rootReducer = combineReducers({\n    reducer\n});\nconst persistConfig = {\n    key: 'root',\n    storage: AsyncStorage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n\n// export type RootState = ReturnType<typeof rootReducer>;\n// const persistConfig: PersistConfig<RootState> = {\n//   key: 'root',\n//   storage:AsyncStorage,\n// };\n// const persistedReducer = persistReducer<RootState>(persistConfig, rootReducer);\n\n\nconst store = createStore(persistedReducer, applyMiddleware(thunk))\n\n\nexport const persistor = persistStore(store)\n\nexport default store;","\nimport React, { useEffect } from 'react';\nimport { View, Text, TextInput } from 'react-native';\n// import { Provider as PaperProvider } from 'react-native-paper'\nimport NavigationWeb from './src/navigation/navigationWeb'\nimport { Provider } from 'react-redux';\nimport store from './src/redux/store';\nimport { persistor } from './src/redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { useFonts } from 'expo-font';\nimport 'react-native-gesture-handler';\n\n\n\nconst App: React.FC = () => {\n\n    const [fontsLoaded] = useFonts({\n        'regular': require('./assets/fonts/Poppins-Regular.ttf'),\n        'bold': require('./assets/fonts/Poppins-Bold.ttf'),\n    });\n\n    useEffect(() => {\n        console.log(\"fontsLoaded\", fontsLoaded)\n    }, [])\n    return (\n\n\n        <Provider store={store}>\n            {/* <PersistGate loading={null} persistor={persistor}> */}\n\n\n\n            <NavigationWeb />\n\n\n            {/* </PersistGate> */}\n\n\n        </Provider>\n        // <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1 }}>\n\n        //     <Text>\n        //         Bharat\n        //     </Text>\n        //     <TextInput\n        //         style={{ borderColor: '#000', borderWidth: 1, width: '100%' }}\n        //     />\n        // </View>\n    );\n}\n\nexport default App\n// import React from 'react';\n// import { View, Text, TextInput } from 'react-native';\n\n\n\n// const App = () => {\n//     return (\n//         <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1 }}>\n\n\n//             <TextInput\n//                 style={{ borderColor: '#000', borderWidth: 1, width: '100%' }}\n//             />\n//             <TextInput\n//                 style={{ borderColor: '#000', borderWidth: 1, width: '100%' }}\n//             />\n//         </View>\n//     );\n// }\n\n// export default App","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [573], () => (__webpack_require__(7984)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["navigationRef","createNavigationContainerRef","navigate","name","params","isReady","goBack","canGoBack","RouteNames","deviceHeight","Dimensions","get","height","deviceWidth","width","scale","size","newSize","Math","round","PixelRatio","roundToNearestPixel","commonColors","textColors","borderColors","backgroundColors","styles","StyleSheet","create","logoImage","config","logoText","fontSize","color","letterSpacing","LogoText","_jsxs","View","style","justifyContent","alignItems","children","_jsx","Image","source","require","resizeMode","Text","fontFamily","container","HeaderText","EmailPhoneInput","borderColor","borderWidth","borderRadius","paddingHorizontal","backgroundColor","marginVertical","SignInSignUpButton","SignInSignUpText","bottomText","marginTop","EmailMobileInput","login","signUp","email","setEmail","useState","useEffect","TextInput","maxLength","value","onChangeText","keyboardType","autoCapitalize","autoCorrect","TouchableOpacity","onPress","navigationService","Otp","SignUp","Splash","animation","_worklet_17552017006242_init_data","code","_worklet_6335448807345_init_data","props","translateY","useSharedValue","loginOpacity","route","setTimeout","animatedStyle","useAnimatedStyle","splashWebTsx1","transform","withTiming","duration","__closure","__workletHash","__initData","animatedLoginStyle","splashWebTsx2","opacity","flex","Animated","position","top","otpContainer","alignSelf","flexDirection","btn1View","otpInputStyle","marginHorizontal","otpInput","textAlign","OtpInput","pin1Ref","useRef","pin2Ref","pin3Ref","pin4Ref","pin5Ref","otp1","setOtp1","otp2","setOtp2","otp3","setOtp3","otp4","setOtp4","otp5","setOtp5","submit","setSubmit","allowFontScaling","ref","onKeyPress","nativeEvent","key","current","focus","async","length","_worklet_12587314240940_init_data","otpOpacity","animatedOtpStyle","otpWebTsx1","SignUpForm","_worklet_8166747605841_init_data","signUpOpacity","animatedSignUpStyle","signUpWebTsx1","SignupForm","speciality","setSpeciality","specialityVisible","setSpecialityVisible","title","setTitle","titleVisible","setTitleVisible","affiliation","setAffiliation","affiliationVisible","setAffiliationVisible","Item","type","marginBottom","marginRight","FlatList","data","id","renderItem","item","keyExtractor","scrollEnabled","_worklet_14579513886503_init_data","signUpFormWebTsx1","ScrollView","contentContainerStyle","flexGrow","padding","Stack","createStackNavigator","linking","prefixes","screens","NavigationWeb","NavigationContainer","Navigator","screenOptions","detachPreviousScreen","initialRouteName","Screen","component","options","headerShown","initialParams","CommonActionTypes","CommonState","userData","reducer","state","Object","assign","action","payload","rootReducer","combineReducers","persistConfig","storage","AsyncStorage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistStore","App","fontsLoaded","useFonts","console","log","Provider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}